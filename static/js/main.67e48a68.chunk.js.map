{"version":3,"sources":["components/TodoHead.js","components/Insert.js","components/Item.js","components/TodoList.js","components/Home.js","components/App.js","index.js"],"names":["TodoHead","today","Date","year","getFullYear","month","getMonth","date","getDate","day","getDay","className","Insert","onInsert","useState","value","setValue","onSubmit","event","preventDefault","autoFocus","placeholder","onChange","target","required","Item","todo","onCheck","onRemove","id","text","checked","editing","setEditing","newText","setNewText","toggleEditing","prev","CheckBox","styled","div","props","css","Text","onClick","TodoList","todos","map","Home","setTodos","nextId","useRef","current","concat","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67e48a68.chunk.js","sourcesContent":["import React from 'react'\nimport './TodoHead.css'\n\nconst TodoHead = () => {\n    let today = new Date();\n    let year = today.getFullYear(); \n    let month = today.getMonth() + 1;  \n    let date = today.getDate(); \n    let day = today.getDay();\n\n    switch (day) {\n        case 1:\n            day='월'\n            break;\n        case 2:\n            day='화'\n            break;\n        case 3:\n            day='수'\n            break;\n        case 4:\n            day='목'\n            break;\n        case 5:\n            day='금'\n            break;\n        case 6:\n            day='토'\n            break;\n        case 0:\n            day='일'\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <div className=\"TodoHead\">\n            <h1>Todo</h1>\n            <div className=\"date\">{year}년 {month}월 {date}일 {day}요일</div>\n        </div>\n    )\n  }\n\nexport default TodoHead","import React, { useState } from 'react'\nimport './Insert.css'\n\nconst Insert = ({onInsert}) => {\n    const [value, setValue] = useState('')\n    const onChange = (event) => {\n        const {\n          target: { value },\n        } = event;\n        setValue(value);\n      };\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n        onInsert(value)\n        setValue('')\n    }\n\n    return(\n        <form className=\"insertForm\" onSubmit={onSubmit}>\n            <input className=\"insertInput\" autoFocus placeholder=\"오늘의 할 일을 추가하세요.\" value={value} onChange={onChange} required/>\n        </form>\n    )\n}\n\nexport default Insert;","import React , {useState} from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdDone, MdModeEdit, MdDelete, MdClear } from 'react-icons/md';\nimport \"./Item.css\"\n\nconst Item = ({todo, onCheck, onRemove}) => {\n  const {id, text, checked} = todo;\n  const [editing, setEditing] = useState(false)\n  const [newText, setNewText] = useState(text)\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev)\n    setNewText(text);\n  }\n  \n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewText(value);\n  };\n\n  const onSubmit = (event) => {\n      event.preventDefault()\n\n      todo.text=newText\n      \n      setEditing(false)\n  }\n\n  const CheckBox = styled.div`\n  ${props =>\n    props.checked &&\n    css`\n      border: 1px solid #ced4da;\n      color: #ced4da;\n    `}\n  `;\n\n  const Text = styled.div`\n  ${props =>\n    props.checked &&\n    css`\n      color: #ced4da;\n    `}\n  `;\n\n  return(\n    <div className=\"item\">\n      {editing ? (\n        <div className=\"TodoEdit\">\n          <form className=\"editForm\" onSubmit={onSubmit}>\n            <input className=\"editInput\" autoFocus placeholder=\"수정하세요\" value={newText} onChange={onChange} required/>\n            <div className=\"done\" onClick={onSubmit}><MdDone /></div>\n          </form>\n          <div className=\"clear\" onClick={toggleEditing}><MdClear /></div>\n        </div>\n      ) : (\n        <div className=\"TodoItem\">\n          <CheckBox className=\"checkBox\" onClick={()=>onCheck(id)} checked={checked}>{checked && <MdDone />}</CheckBox>\n          <Text className=\"text\" checked={checked}>{text}</Text>\n          <div className=\"edit\" onClick={toggleEditing}><MdModeEdit /></div>\n          <div className=\"remove\" onClick={()=>onRemove(id)}><MdDelete /></div>\n        </div>\n      )}\n    </div>\n  )\n}\n\n\nexport default Item;","import React from 'react';\nimport Item from './Item'\nimport './TodoList.css'\n\nfunction TodoList({todos, onCheck, onRemove}) {\n  \n  return(\n    <div className=\"TodoList\">\n      {todos.map(todo =>\n            <Item todo={todo} key={todo.id} onCheck={onCheck} onRemove={onRemove}/>)}\n      \n    </div>\n  )\n}\n\n\nexport default TodoList;\n","import React, {useState, useRef} from 'react'\nimport TodoHead from './TodoHead'\nimport Insert from './Insert'\nimport TodoList from './TodoList'\n\nimport './Home.css'\n\nconst Home = () => {\n    const [todos, setTodos] = useState([\n        {\n          id: 1,\n          text: '첫 번째 할 일',\n          checked: true\n        },\n        {\n          id: 2,\n          text: '두 번째 할 일',\n          checked: true\n        },\n        {\n          id: 3,\n          text: '세 번째 할 일',\n          checked: false\n        }\n      ])\n    \n    const nextId = useRef(4)\n    const onInsert = ((text) => {\n        const todo = {\n        id: nextId.current,\n        text,\n        checked: false\n        }\n    setTodos(todos.concat(todo))\n    nextId.current += 1; \n    })\n    \n    const onCheck = (id => {\n    setTodos(todos.map(todo => todo.id === id ? {...todo, checked: !todo.checked} : todo))\n    })\n\n    const onRemove = (id => {\n    setTodos(todos.filter(todo => todo.id !== id))\n    })\n\n    \n    \n    return (\n        <div className=\"home\">\n            <TodoHead />\n            <Insert onInsert={onInsert}/>\n            <TodoList todos={todos} onCheck={onCheck} onRemove={onRemove}/>\n        </div>\n    )\n}\n\nexport default Home","import React from 'react';\nimport Home from './Home'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n      <footer className=\"footer\">&copy; {new Date().getFullYear()} ljieun </footer>\n    </div>\n  )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}